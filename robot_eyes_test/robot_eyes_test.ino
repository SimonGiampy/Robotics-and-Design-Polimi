#include <MD_MAX72xx.h>

#define HARDWARE_TYPE MD_MAX72XX::FC16_HW
#define NUM_DEVICES 2

#define LEFT_DATA_PIN 18
#define LEFT_CLK_PIN 22
#define LEFT_CS_PIN 21
#define RIGHT_DATA_PIN 17
#define RIGHT_CLK_PIN 16
#define RIGHT_CS_PIN 15

//MD_MAX72XX leftMatrix = MD_MAX72XX(HARDWARE_TYPE, LEFT_DATA_PIN, LEFT_CLK_PIN, LEFT_CS_PIN, NUM_DEVICES);
MD_MAX72XX rightMatrix = MD_MAX72XX(HARDWARE_TYPE, RIGHT_DATA_PIN, RIGHT_CLK_PIN, RIGHT_CS_PIN, NUM_DEVICES);

byte frames[][16] = {
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00001110, B00001110, B00001110, B00001110, B00001110, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000111, B00000111, B00000111, B00000111, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000111, B00000111, B00000111, B00000111, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000111, B00000111, B00000111, B00000111, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000111, B00000111, B00000111, B00000111, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000111, B00000111, B00000111, B00000111, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000111, B00000111, B00000111, B00000111, B00000111, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00001110, B00001110, B00001110, B00001110, B00001110, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00111000, B00111000, B00111000, B00111000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B01110000, B01110000, B01110000, B01110000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B01110000, B01110000, B01110000, B01110000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B01110000, B01110000, B01110000, B01110000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B01110000, B01110000, B01110000, B01110000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B01110000, B01110000, B01110000, B01110000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B01110000, B01110000, B01110000, B01110000, B01110000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00111000, B00111000, B00111000, B00111000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00111000, B00111000, B00111000, B00111000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00111000, B00111000, B00111000, B00111000, B00111000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000},
  {B00000000, B00000000, B00000000, B00000000, B00000000, B00011100, B00011100, B00011100, B00011100, B00011100, B00000000, B00000000, B00000000, B00000000, B00000000, B00000000}
};

void setup() {
  //leftMatrix.begin();
  //leftMatrix.clear();
  //leftMatrix.control(MD_MAX72XX::INTENSITY, 8);
  rightMatrix.begin();
  rightMatrix.clear();
  rightMatrix.control(MD_MAX72XX::INTENSITY, 15);
}

void loop() {
  for(int f=0; f < 26; f++){
    for(int i=0; i < 16; i++){
      //leftMatrix.setColumn(i, frames[f][i]);
      rightMatrix.setColumn(i, frames[f][i]);
    }
    delay(100);
  }

}
